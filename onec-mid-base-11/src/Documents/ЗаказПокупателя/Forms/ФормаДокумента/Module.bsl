
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
    ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТовары

&НаКлиенте
Процедура ТоварыКоличествоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыЦенаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПриИзменении(Элемент)
	РассчитатьСуммуДокумента();
КонецПроцедуры

&НаКлиенте
Процедура ТоварыСкидкаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыУслуги

&НаКлиенте
Процедура УслугиКоличествоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиЦенаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиСкидкаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиПриИзменении(Элемент)
	РассчитатьСуммуДокумента();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура РассчитатьСуммуСтроки(ТекущиеДанные)
	
	// ++Артемьев Доработка по заданию 13_2 20.07.25
	//ТекущиеДанные.Сумма = ТекущиеДанные.Цена * ТекущиеДанные.Количество; Типовой код
	//Внесенная доработка, для пересчета строки с учетом скидки	
	ДЗ13_2_РассчитатьСуммуСтроки(ТекущиеДанные);
	// --
	РассчитатьСуммуДокумента();
	
	//КоэффициентСкидки = 1 - ТекущиеДанные.Скидка / 100;
	//ТекущиеДанные.Сумма = ТекущиеДанные.Цена * ТекущиеДанные.Количество * КоэффициентСкидки;
	
КонецПроцедуры

// ++Артемьев Доработка по заданию 13_2 20.07.25
&НаКлиенте
Процедура ДЗ13_2_РассчитатьСуммуСтроки(ТекущиеДанные)
    
	//Рассчитывается сумма строки с учетом указанной Согласованной скидки
	//ТекущиеДанные.Сумма = ТекущиеДанные.Количество * (ТекущиеДанные.Цена - ТекущиеДанные.Цена * Объект.ДЗ11_2_СогласованнаяСкидка/100);
	СкидкаВТаблице = ТекущиеДанные.Скидка / 100;
	СкидкаВШапке = Объект.ДЗ13_2_СогласованнаяСкидка / 100;
	Если СкидкаВТаблице + СкидкаВШапке > 1 Тогда
		Сообщить(СтрШаблон("Сумма по Номенклатуре %1 рассчитывается некорректно, так общая скидка превышает 100 процентов",ТекущиеДанные.Номенклатура));
	Иначе	
		ТекущиеДанные.Сумма = ТекущиеДанные.Количество * (ТекущиеДанные.Цена - ТекущиеДанные.Цена * СкидкаВШапке - ТекущиеДанные.Цена * СкидкаВТаблице); 	
	КонецЕсли;
	
	РассчитатьСуммуДокумента();
	
КонецПроцедуры
//--

&НаКлиенте
Процедура РассчитатьСуммуДокумента()
	
	Объект.СуммаДокумента = Объект.Товары.Итог("Сумма") + Объект.Услуги.Итог("Сумма");
	
КонецПроцедуры

#Область ПодключаемыеКоманды

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
    ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
    ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

// ++Артемьев Доработка по заданию 13_2 20.07.25
&НаКлиенте
Асинх Процедура ДЗ13_2_СогласованнаяСкидкаПриИзменении(Элемент)
//При заполненных табличных частях, осуществляет их пересчет при указании(изменении)
//Согласованной скидки через всплывающий в пользовательском режиме вопрос 
	Если ЗначениеЗаполнено(Объект.Товары) И ЗначениеЗаполнено(Объект.Услуги) Тогда
		Вопрос = ВопросАсинх("Изменен процент скидки. Пересчитать таблицу товаров и услуг?", РежимДиалогаВопрос.ДаНет);
		ОтветНаВопрос = Ждать Вопрос;
		Если ОтветНаВопрос = КодВозвратаДиалога.Да Тогда
        	ПересчетСтрок();
		КонецЕсли;
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ПересчитатьТаблицу(Команда)
//Команда, осуществляющая пересчет строк с учетом Согласованной скидки 	
	ПересчетСтрок();
	РассчитатьСуммуДокумента();
КонецПроцедуры

&НаКлиенте
Процедура ПересчетСтрок()
//Пересчитывает каждую строку табличной части Товары с учетом Согласованной скидки	
	Для каждого ТекущиеДанные Из Объект.Товары Цикл
		ДЗ13_2_РассчитатьСуммуСтроки(ТекущиеДанные);
	КонецЦикла;
	
//Пересчитывает каждую строку табличной части Услуги с учетом Согласованной скидки	
	Для каждого ТекущиеДанные Из Объект.Услуги Цикл
		ДЗ13_2_РассчитатьСуммуСтроки(ТекущиеДанные);
	КонецЦикла;
	
КонецПроцедуры
//--

#КонецОбласти

#КонецОбласти
